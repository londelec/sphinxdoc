# -- General configuration -----------------------------------------------------

import sys, os, datetime
from sphinx import version_info as sphinx_version

datetimeNow = datetime.datetime.now()

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.abspath('.'))
sys.path.insert(0, os.path.abspath('plugins'))
if sys.version_info >= (3, 5):
    sys.path.insert(0, os.path.abspath('plugins_python3'))
else:
    sys.path.insert(0, os.path.abspath('plugins_python2'))


# Builder version string.
# Using SemVer specification found at http://semver.org/spec/v2.0.0.html
docbuild_version = u'0.1.0'


# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
# 'pngmath' was replaced with 'imgmath' in Sphinx v1.6.1 (released May 16, 2017)
if (sphinx_version[0] > 1 or (sphinx_version[0] == 1 and sphinx_version[1] >= 6)):
    extensions = ['sphinx.ext.imgmath', 'numref', 'fieldlisttable', 'roles', 'latexwrite', 'includehtml']
else:
    extensions = ['sphinx.ext.pngmath', 'numref', 'fieldlisttable', 'roles', 'latexwrite', 'includehtml']


# Add any paths that contain templates here, relative to this directory.
templates_path = [u'_templates']


# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
source_encoding = u'utf-8-sig'


# The master toctree document.
master_doc = u'index'

# Copyright notice.
copyright = str(datetimeNow.year) + u', Londelec UK Ltd'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
language = u'en'

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
today_fmt = '%d %B %Y'

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# Define default roles.
# Merge with project specific roles if defined in project configuration with variable 'roles'.
default_roles = ['inlinetip', 'inlineimportant', 'inlineattention', 'xmlstyle', 'xmllegacy', 'leubold', 'lemonobgtext', 'bitref']
if 'roles' in locals() or 'roles' in globals():
    roles.extend(default_roles)
else:
    roles = default_roles
